<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgIcono.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfcAAABkCAMAAACsLolMAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAACEUExURf///wAAAP7+/mpqarq6uvX19cvLy6ysrGBgYN7e3tnZ2fj4+FpaWldXV4eHh8LCwjw8
        PBsbGy4uLujo6KOjo+zs7ENDQ5CQkJqamnR0dBQUFDMzM2dnZ+Pj47a2to2NjX9/f05OTnFxcdHR0SUl
        JZaWlklJSaenp8fHxxgYGCAgIAsLC9lZKR8AABhSSURBVHhe7Z2JWuq6GoZppcrggCKCyig4cv/3d75/
        SJqpBVTWlvP0Pftgm7n5MiftajU0NDQ0NDT8f5LnrfaNy0feytWOGaq5gXw4zNRYWfueG/4qUDHzKdRG
        mauxIdD9UY2Vs0b30yDS/XMEQ7Uk2mpu8G1bSzVWLtS44e+jkhl6vrCx7h5Bff9Q44Y/DjTuqGbKudOS
        46Je9/xSjZWZX2ga/irQeKGaKReH6F6oqaHR/USAxq+qmdI5RPeumiqDvpo3/HGg7LmKpjz3yzpbr3tc
        Zi6b6n46hG21MwffqfudmirLRvdTIW/1N6qa4oi3Q/ewmcdwvtH9RIBQwVwswwxeqdUd1f1FDZUthnWN
        8EmKYZmrDsVoOPrNMdFoGCy71REuyb1Cb9GvVvdWa6hmhoEjO64W0zMPjBjVsor+pTpVpu9kmrfWHTX4
        LhIQQrrxQpq+FDtLat46D2LvuEscnORLvSGW5qmnSzWhKKbZratvTrGO3q+eKdc6F0OKBjxOX9gaULSd
        NV/2L6cTvhAmQbY6kfdvMSy3oF6K0+n1+wctxwVPOhLVSkaSLk5MTX3Hw/i8qg2Tt67U2LIzj/vq0MJZ
        l0eJOJxrDihvveu9Adm0I02J2M+tn1xHR3pLkJTCs5rAFWVxW+8IpCR3x8QoSsQm2/JfwNGKF+SKLQ4g
        aGTdyCmltl1BHGLPPE1RWr1HjQWaGhf4rdQ9kR9uyLgK1nS+qzs8RTEdDOuONF/ovWXnUPRQ3QdsQGzU
        BJDGK70mUBJWMNqeLRaLF/IhVeYuu+W/wNEdUTzyhRDWNidyEnKs15RvT+JA8aolxRBlhhmf4bdKd6R8
        q0aGW0/XpO5qV0W6vrdaN3r7fUT3VvyonE/16UroXpLSXa9K5LnsRAl/CjQLX6YFGN1/RbpztLa+u7or
        Z1nmJRs3a46G+hO2Id2lzclH8wfYLNTCEClILT1Z4CetOwTuB3O4eFMm1n0X/4Xu2T2exsuOkJ/rjlgX
        W2qsJR78drLsiq8V9PDgB7rTM7xk24UsuKqN0Z2gPJybFBBwFOyqoWsS4fH/Ct1bedTN+MUPnIjuyI0w
        5T4/132Afhv5JeJSbHggT3Y99PAj3WmYfQapB3zDWN2pJPSy7A7DWDEAYhTwoDW+QveU7DQN8DgV3d2V
        qhQ/1h3JH1MeLyQe/LxlWzt4ZuTyZ+086vp5a8Kbomrj6A4jPDvaAjFg8nBPDgxokAZHke48xxtFmmZZ
        4TwGczK6Y0Dq5UfAj3SncDESw7T6MtuaSFAz9cl8fqJ7K+ehIxxP7dO47Tx4ihbS4wrPkULJWHcYppxP
        oqw7Hd2/hlLI0xys+4B55ok1gu3KOaQPMwLK6XncMCw/aefp0dB/t66zrGuk8HTPW4/Zs7+sk5PriEsa
        Gca6R4dsmNt+lHGno7vf8YUcrLuCjpaylvKWp+cPdmaHxrirlx4/0n2TbegpRvSwahPoPqaN8gBNq8+4
        SOh+r1c+7bjGnJDu2Vu17Ifr/rQlsge6ZSFkEQ1PcSNG6IkjAYiftPMI/Z4vUMzM2s0euge7sYYl3HoE
        pzQMZxqMy+/pHuX8wezSXTrFtPgH665XTN5CPblcENdbDOJRObhJlgW6AEd3Z91mD90R6hVcLa6vrxcY
        cUsBiHRf0mjSA/7C3ZmDCPoN4bd0z1vnq6skl1/qznKpNgErkxOVuiOqqi7+R7q3cm+dQ0bLa+mKI76r
        Oy68rdE7tXF1R7SD7CF8RJRCWtH5LsmZ0K/pnghbqVmzTFOtO6ZaR9Hd9y2lq9hiZJ1glT3pFfITSdV9
        mX1098dc3J8E9Z1Km+35FXrimfr5BvNklv1eO58InEjMP9WmkhrdvZOFLt/XnTR+y766I6G4zJ5kXQQq
        QRrpWCRO/oWxWSl1euPduvOS61Wh0cw22ZuYWt05pmdnpO8SnqLYm3gKx/ye7pX8qu6lFD4/0Z0y1Ywt
        eBB1zxFQHeMeHiWDCkdL+t137popDfjfxlR+V/eyZDq6wxCDiPIMO8ZgMl0g3Tl88oYBALU2bOGSnpbv
        gXsS0+XkdOfuKn6UH7TzvFeNSsaB4ndDxxcJmhRJ7010r2RfhgJT+XI8mq7vefXdJs+r7/277LO0Qqk6
        4ziddv4Gwwz07qUXC8xkQ+dAwj7Dcnq6p9vBb+uOsHgSp9mNH0SvalN//HbRK4pRb/Jm90gxsc8e16Ni
        eEHb+FoIkSsPY54RYE5gE+jpjiS+O0lHYeP+4im7fYWn8ZLHQQ99kxIfmH2jj393yqDPCep+Rwt36tTy
        fd11zbwED2i24Uliy7NM67xZ1cbMtb1cSeu+ku1XA/oTbiu8/ffrCpk4nSMk+yBuqlQ/Sd3pDQDuEF0O
        033j6E626GH1lrjWQTrMulBOeHiXs+sUb9sI8Gin2mnd8eg2YOiMnDK3CAaNOq3dqR+U57dXlCLrPgQ+
        8tQibCVvdScpT1F3ro4/0n041O1WCqc/HPorwP2ZnHzksjX6eF8uX9szXEqU9Jv35svl5MZZYMlnCNNg
        QxsNy7W3Yjak8qp3uCiGZEBpEQqOwrqIIJuKlbsUPPis5CR1p4W7gMN0B44A9lfRaxph++bq1DG0l647
        L7QKCwkEP65TuvXcx+QVa7EhnWDRz2CCP03dEWeQQQfrztnsBOJcqzn/EVP+67hQ2IFc8a9CHsmqvNNL
        Qm5C93q1C3LZjSSLeSi39ys4Ud0z99Ay8Q3dQW2Oq2VeFDwcMxI7iIE6sEGpN762lLcIp0itmO8Fp6l3
        7Z/FDDkj1YP4Q05C92ilFwQHBQ/Tfbwk7s+dfr37yGbE2AiKDvq9g8na5+p6TUZsvFjaNR7cD+8v6fTl
        alHu4eStm8frUlmMwx+XbfFL8AuLrvA3y8doB46xXkogJyk6mkfn3w2rdxkcJjy7nITu3dTJA164sxym
        O028iU1ZepwR00ACRhY7x+cH91rhnfPzrb7T23aMeCxseZ6Gl2gWekmm9M6b2YIiMFlMbvxJ5a5i2H4x
        T2G5e6G3OyrwAzsJ3Xu0yBHhvhFzoO7lRBhTaMkQR/c7MoPp6A03X9PH5QvXLl2VN/txcDCkbbJPcsD7
        ZfZ7UjTtpx0kTR90twfmEQa9+vQMK7WlZcEq3VvdSmazWc9bXgAwVNsUmn7hRHTPU0sWbtk+WPe8GPWo
        OmOmztkB3d/7hQATmBVw9XkjSy3F+Uuke2uEGfjtjUz5evSU5pUG1mOuN4HudF4T0BEYva/TnZz+Ft6a
        7YnoTm+VRXw5veTBuvNfVD2zswvdbaMPE5g9ZtkVVJcbqKeH1Mr9dzRCHRhx2yCr+Tp5knpo2yNf9zVy
        zDuhXak74IB+CW+/8FR0b40+9caBF+7Ez+G6s5y0BiRBOLqL0jCgnVK2xA/95WvVnQ9e8gIS3dEv1NZ1
        BVxdbLkUsGWpO92itBS8IigeG90tKd3j9/iJK62L39KdfNLbjJHuAnImOcy29X3lOqBAYCBdD3QfIkHP
        6DDI3OpOd7g5o52gUoVGdyWpO59xjrDP8r12fsxbZEnd4Sf9gUejOzsogVM0ALLhBt27FDa9yOvrzlFi
        SIE+xC6oNbor6foefwOAMB3nwbr3zs/bZ5jJUZ0kI+g+Zzulx2MvvXExuvP5O/ELqOFBNLKOyLrTS1eY
        6ePW7d+LJ/QefIrCvvna6K4k+3cCORRBW8zI24N1F7ZyOg5A942+S8FnVJAIjbbUli+M7u9ccT0+deov
        utMchI+FubojWB7od7IvMzhpdFeqdI8+48fIjOh7ujsn8qG7gV5aFDXYGjPuC0JHYkb3hFyfPPVX3flQ
        PhcNt53f8NSdWwvzTmyju1JZ3+PP/BBc6w7WfX5Bm9neet1W36VAQ+yclIWA8gq6PqfRHb1OeEL5SWcH
        Wt95KIqRnlPfMUZZ3U8IFAA1a3RXKus7sjS1Lk3nE78zruveOs7c/p0iQg+si6lm9UTXPYzu4sAVHvqK
        G6M7pQrNuaM7fUDDop/kaHRXaup7q+DVLp9b1KnDdUeeQ5C7QrWD7t54Ho8ps3MUgvX5GuHrdozqnvOr
        rVRCGGqyIbd0OqI78UqD+lJ3fy6qZ13/le6eTieme/qQ2fPoO7ojzyE2Up/Snb//RgN6CEr2/CYjY3Sn
        Pqdci4WjEZoPWdUtdSdH1/CruuPuptvj1fIZruVgzr/S3d0L+obukokO/7S+Y3ScWLF9+5bu0AozOR29
        +brDig6s0+iM3PF3KkLdqfI6I/o+uqAJeXR0h29EhYGE6I4CUK7PInzpFf6V7t6RBXtu0KDm1aDV8jF9
        VxW/rDsNhSPOordxd/fvlOdQgl9byb3+nfTiNxtos1eI6jugbR3rYIYOyLxUXerOr1sByiPuCOyeXY6+
        fssbDNDdtA5AbBm4JL+/hbMvwy/6+EhLVQMyyMfrFhP8qu5EauEu+oDTbt0BSyHfTMJjnd0LE93oozqx
        ao/yVr97j4cIxnW4oRkBOyjWNNGwX/p22nmtJ7wr299kX2pIoIniphe6X5uYy6+vEXlreV3NYhxW2jG9
        a1uFc/YDf5FEn+RbCS6Rj/KVkjS/rnty4S5kH92p6vEqu+huwfysgJrBhyb0zRg7rsOdt54wLUzWebrz
        hwG4TUSybR0h35/ZhjxAd4vbdnIMNczm4amEG3dnOsaGh79RFnq9f4poRBCuWoX8tu5IflT2Ymp1t+fn
        eTFto/XdssYAjN+VWtu0f162dR/2yZQZui0dvFHx14xFB+AmmSo0/lBXX7am8hTkyX0Yc8SLcS4t1APB
        vH++RGgxg5cP7jtoWMLuq4habR54VPlBYNFw3jv+kOL363tYE1PU6t7tlUHOej3KqqJX0seYS7dNhu3J
        y3T5fl4eS3b9gtl8PJ2O5079xmAAQegl0+1RHuW9nrvBh6zssTlcW8poklBhgwbDRdStlWwekT52Vscw
        +hyiHMtLg8AiUWgGXMsxdI/HoyG1uu+iA+9BJtRn4z8C+Y8WisYStVzS2cP6BPtfeiBoWlbhh4yDD+F7
        J0fSHEX3vPJAqfIT3dv81rhmAud1dS5SxeLKVeniN8EQcqfqxDPan/oExd829M4reuDx3EGIoNObao6h
        OxrJHZ/++FF9t1B7uYeg+7j5ORRLlDdVvNB2X02y4rGxnl4K/EgG0GJGQPkqfwXHqe+tUdTyeNTqzs9S
        tOkY7Nd03DNPyz+9xRWGbm+PH+UhLownXl/Hr+M29YGmIThfwIiMb3h84Gfy8L6DhnRwdkFnrcQGXeR4
        jEAu1uFUuUupdX0noWCGu1o5hyf/oHlI+O8SgA63bGpvodQPo28UeYcb0xxFd6QvdfCqpF53/DcpRzaD
        exkEw7hXTlc2zjkMNcpW5VcX3JZvitis7iiSznurC+oG2NTuKX25/4AvLtByyycQaoGDaHGqHopaPSfw
        toiEDmaiUTpw30sMI92v7ac5ju5IT+0XIHbozp+Wf1pNp5030l+W3XTUOricdjhXXmwe0J1g3yn3e7xH
        tA5ijmyi2rG5mnauaEnZfD7a/ea7XeWjODl1O/9RP1jvnsQErGhFoSrc1CLIM8/J1Y8tAcm+pebdeuVY
        uteX/xrdkeACncSGGmHcjT7OjBAU85nMwYY0rbbv3WL4Opp14TB7Mqsz0P1mOAPrOQnKR67ZgtqhBzlW
        P2ojnjtq6+kOzkazYQ/y3ZZ5pv/Om7OImoKq4V4DOp/num+7RjM5YomZpXjBL/9dJ3ZAETIHUcuRdKcs
        S5ZEoV53PMvU6WZnsgZBipWrzrNneZ2GrvmMJIBmpqBDd5uuHuR95IAx4Bwg98QJ6E9R7aipRzjQnc3Q
        C1ifcIhSgtbF+kgC3ztnrimeKhcEKjOvo6+KMLP76GUswf9odpKjtfP4L9pesFTrDo/QLPhHa/ga2Q/Z
        +ZJ0GmJ8pystRneUDF2udXTHPf0DDxQjfKH6nvGF3EqguDC6czNl17b5takLmMg/qlRNPO/aD+/tKAeY
        Vi7+bF4wjp2Ml2XHFILqng7W4Vj1nfPSGUH51Onev6WWVpoxgS8xWaFKy6ZcQSGHbjI7upuFbEd3OB2h
        WvMVepAn9S42iHxAKVXdYQylnfr+nH0W+aD8GGIEea1+zl1Ufs3ZX5o+EJp/pIMtOVo7z5mYemOSqNP9
        I7UNwd/7dmNC4GbfzuqOPtYcqnPbeQDP1DVS2OWiD/9qsGU7/1b2jjw4HfMjV/57jlR4KtrkfVhJEUyB
        lH2PXUcumGPqjidKDjvqdceQLer3ENRl8G8mc5stPT/GbbNu7waP8mayMdAd+nHPD+NgbA6bOUxYdwrk
        Kvt01ulRbhFF/0uaCzX0gGntzGUX1UPGPs9aDuehKkCPI+pOeZJ6YxJU6o40Y4ikNyUIiZvqEpi0zZSL
        AyDuSFR+7ED3oW6moR8OmkA+sqG6Mw80TVbLGU0acIeiiNA8fwbeuE9SMeYKSb//QRz8ZTRmW364qY7j
        6o6uNTkhqdadPweuNyV4kmCvASaR7s7qZ6C7qkv1V00MiH0Jm1L37aCcv5u+Ja9bCYlykBmPwnkspSnB
        rVPOPHYueqZxdxVrOKbuoGLhrq6dR53U6xLW3avvMEJKJBxa05tAty/avEjqjorLB9gwAgjqO1oC+twF
        634/mbzSEI3O+NB/xW225bcy5uiu0kPvivHXAm7DQ4VwnVSeWpRE0GRIs87DuJXF6t0cXfdk91enOzIn
        LrOki7enjIeTwRqQcR0tcUEceehAd9ghSvc9GwNP27S+iwkuaL8MAXn/JGryoCIcJZrzN44j0h2OR6nG
        Ib3VhgQgWVUD4woukUVBwa7gyLqnMgDUtfMoJ+H3sCgUjOJcXxj3fJozlKQ7PCIempuzUaA7+g6urwjb
        zPAVjCZkUMC6U16jT3jlC7+2JU8yxP9cLnhEBJIcDw5T1v98Vn6KFDgm9/NkP1kB5kHkTUOo5ej1HamI
        m7dq3fEfalAwoKccQ1O98p4Igy19a5V1x1/kqRkl+bpDAl2wg5Re2D0eNji648qMJNAULNYKIsOw34uf
        XRfxBx8k85PtPMWUOHcavtHlMdx7cWDqHSvawbHrO0gs3FW38wCNsuxZkNyUhVLT0OTJCIzMJf901cPM
        31FBn3SuJw06u5bjatwjcPWUAbsEUnzp2NCp70iPvCuDrLF1PL9NTeXkM0g+tKbI7mLdYQqbuN9LV3hL
        d6/VwI7fGu7iX+geL9zV6k6t8kp6bmLWkQE22l/ThALKcFO5VXcuC7po4dT3gvZweGGffGJS/KZlALUd
        TYu8mOb07xj78RfCMSClcgbIn3wRwQf6RusT12xMtgndyTxV4+uykDwNq1e8lSXVdY52T/5JfY/+ofR6
        3bnxvOadt9EF9NAaSRXl655EK9oUHkYBksNGd/5XUyQ50P11Di4m/ICyAEiOC1r3vubDHHysnr59xFaI
        hzxMaLWE2xHY6oiLhMS4nz6gIa4tUd29pFRwI5Nu50HiwLGWrzp6i8r1gNtryk6Od38CQXbrHg1k9qjv
        SJCf6nrdW4W3VPUkw/u81fPGOOVn+1V3gLD4/fhgSGE/CItf/wiYeQ2VdTegYmtzr94INLbxikjU9+JZ
        2Q1+KnXnqaqHvJqzi+LjfjnY3NpM2N5uBo8T5zDx/mD62faZq00FaP7m6lKZV+0puSAbXW+Onzzvk40X
        Lewu7HbU50QLMvKrv7Dffj1z1ludJR1k9gtZlFVqO7hAANYtKMN++yhtTFF7OpMuZmFWhRRU7ahacuPh
        Ys874E+V7rAbhZ+w3fV2Cz+9UAxn6/Pz84/1jL+NDrSoHcSBPpIx7BFt7MQaJKzIKF9PHlerx3s67yZO
        2LhojzurzrgNbUqPHx9lm4McocM1sw/kDdFFdYBL65bDPp+8rK6uL+BL6yd+KDPhmY7jsWPcW09EDgMn
        TiY80EivXosT/FTqDstwOCjzkVoo5KgpF7MgVftwuJ/I/T4BcPoc3JsoBeTYMTN3vrF3U6Iu+Vphl9aE
        rv1QxAvfMmoSwIaeDa7DLbPyACb+1uiet4LpH73/44Zdy94OG46CNyYg3spyUas7bMPRcXrNruFPEr6V
        Ni/Fq9UdlrkaGvY4GdXwV+CXqB2GpXa1ulNDH8wEMP9Tu4a/DXQKprTOB3V26A7rwNZfgm74w+gZ6xJ3
        x2eH7rL66HD7nVl4w38Drfc5YLq/b33nvQSPPY9LNPzn0OctPdzpfUp3a8kEJ+53rno2/A2gsUqmbN0q
        u1v3YGC3e8Wu4U8AFVUy5dPtomEbrsk5rQERdBI7X1hv+BtAxbsHlyvn5Uu6Wi/d710tl4Hu7wP1xwzi
        VwYaGhoaGhoaGhqOS6v1P0pPNTQA3SJ0AAAAAElFTkSuQmCC
</value>
  </data>
</root>